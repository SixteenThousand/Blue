#!/bin/sh

function error {
	echo -e "\e[1;31m$1\e[0m"
	exit 1
}

function main {
	case $1 in
		-h|--help) print_help;;
		github) github $2 $3;;
		create-submodule) create_submodule $2;;
		*) error 'Invalid option! Try --help instead';;
	esac

	if [ ! "$(basename $(pwd))" = 'Blue' ]
	then
		error 'You can only run this from the project toplevel, i.e. Blue!'
	fi
}

function github {
	name=$1
	visibility='--'${2:-'private'}
	DESCRIPTION='Please see https://github.com/SixteenThousand/Blue for more information about this repository'
	cd ./configs
	gh repo create "blue-$name" --description "$DESCRIPTION" $visibility --clone
	mv "blue-$name" $name
}

function create_submodule {
	name=$1
	git submodule add "https://github.com/SixteenThousand/blue-$name" "./configs/$name"
}

function print_help {
	cat <<- EOF
	This script handles the fiddly bits needed to start a new config in 
	this project. It should be run from the project top-level, i.e. Blue.

	USAGE:
		[1m./new-app github APPNAME REPO_VISIBILITY[0m
	Creates a github repo for the app, and clones the (empty) repo into 
	this repo.
	APPNAME is the name of the application you want to add a 
	configuration for, e.g. riverwm. The new config repo will be in a 
	directory called ./configs/APPNAME, and its corresponding GitHub
	repo will be called blue-APPNAME.
	REPO_VISIBILITY should be one of 'public' and 'private'. It controls 
	the visibility of the GitHub repo. Defaults to 'private'.

		[1m./new-app create-submodule APPNAME[0m
	Adds a submodule for the repo at ./configs/APPNAME. Changes still 
	have to be committed after running this.
	EOF
	exit 0
}


main $@
